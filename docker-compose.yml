version: "3.4"

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    volumes:
      - type: volume
        source: namenode
        target: /hadoop/dfs/name
    environment:
      CLUSTER_NAME: "test"
      CORE_CONF_fs_defaultFS: "hdfs://namenode:8020"
      CORE_CONF_hadoop_http_staticuser_user: "root"
      CORE_CONF_hadoop_proxyuser_hue_hosts: "*"
      CORE_CONF_hadoop_proxyuser_hue_groups: "*"
      HDFS_CONF_dfs_webhdfs_enabled: "true"
      HDFS_CONF_dfs_permissions_enabled: "false"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == akswnc4.aksw.uni-leipzig.de
      labels:
        traefik.frontend.rule: "Host:namenode.sansa.aksw.org"
        traefik.docker.network: "sansa"
        traefik.port: "50070"
        traefik.backend: "namenode"
        traefik.default.protocol: "http"
        traefik.enable: "true"

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    volumes:
      - type: volume
        source: datanode
        target: /hadoop/dfs/data
    environment:
      CORE_CONF_fs_defaultFS: "hdfs://namenode:8020"
      SERVICE_PRECONDITION: "namenode:50070"
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure

  spark-master:
    image: bde2020/spark-master:2.1.0-hadoop2.8-hive-java8
    environment:
      CORE_CONF_fs_defaultFS: "hdfs://namenode:8020"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == akswnc4.aksw.uni-leipzig.de
      labels:
        traefik.docker.network: "sansa"
        traefik.port: "8080"
        traefik.frontend.rule: "Host:spark.sansa.aksw.org"
        traefik.backend: "spark-master"
        traefik.default.protocol: "http"
        traefik.enable: "true"

  spark-worker:
    image: bde2020/spark-worker:2.1.0-hadoop2.8-hive-java8
    environment:
      SPARK_MASTER: "spark://spark-master:7077"
      CORE_CONF_fs_defaultFS: "hdfs://namenode:8020"
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure

  hue:
    image: bde2020/hdfs-filebrowser:3.11
    environment:
      NAMENODE_HOST: "namenode"
      SPARK_MASTER: "spark://spark-master:7077"
      SERVICE_PRECONDITION: "spark-master:8080"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == akswnc4.aksw.uni-leipzig.de
      labels:
        traefik.docker.network: "sansa"
        traefik.port: "8088"
        traefik.frontend.rule: "Host:hdfs.sansa.aksw.org"
        traefik.backend: "hdfs-filebrowser"
        traefik.default.protocol: "http"
        traefik.enable: "true"

  zeppelin:
    image: bde2020/zeppelin:0.0.1-zeppelin-0.7.1-hadoop-2.8.0-spark-2.1.0
    volumes:
      - type: bind
        source: ./notebook
        target: /opt/zeppelin/notebook
      - type: bind
        source: ./examples
        target: /opt/sansa-examples
    environment:
      CORE_CONF_fs_defaultFS: "hdfs://namenode:8020"
      SPARK_MASTER: "spark://spark-master:7077"
      MASTER: "spark://spark-master:7077"
      SPARK_SUBMIT_OPTIONS: "--jars /opt/sansa-examples/jars/sansa-examples-spark.jar --conf spark.serializer=org.apache.spark.serializer.KryoSerializer"
      SERVICE_PRECONDITION: "spark-master:8080"
    deploy:
       mode: replicated
       replicas: 1
       restart_policy:
         condition: on-failure
       placement:
         constraints:
           - node.hostname == akswnc4.aksw.uni-leipzig.de
       labels:
         traefik.docker.network: "sansa"
         traefik.port: "8080"
         traefik.frontend.rule: "Host:notebooks.sansa.aksw.org,notebooks.sansa-stack.net"
         traefik.backend: "zeppelin-notebooks"
         traefik.default.protocol: "http"
         traefik.enable: "true"

volumes:
  namenode:
  datanode:

networks:
  default:
    external:
      name: sansa
